{
  "compilerOptions": {
    "target": "es2015" /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019' or 'ESNEXT'. */,
    "module": "commonjs" /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. */,
    "declaration": false /* Generates corresponding '.d.ts' file. */,
    "declarationMap": false /* Generates a sourcemap for each corresponding '.d.ts' file. */,
    "sourceMap": false /* Generates corresponding '.map' file. */,
    "outDir": "dist/" /* Redirect output structure to the directory. */,
    "removeComments": true /* Do not emit comments to output. */,
    "skipLibCheck": true,
    /* Module Resolution Options */
    "moduleResolution": "node" /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */,
    "baseUrl": "." /* Base directory to resolve non-absolute module names. */,
    "paths": {
      "@app/*": ["./src/*"]
    } /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */,
    // "rootDirs": [],                        /* List of root folders whose combined content represents the structure of the project at runtime. */
    "typeRoots": ["./node_modules/@types", "./src/typings"] /* List of folders to include type definitions from. */,
    // "types": [],                           /* Type declaration files to be included in compilation. */
    "allowSyntheticDefaultImports": true /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */,
    "esModuleInterop": true /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */,
    "resolveJsonModule": true,
    /* Experimental Options */
    "experimentalDecorators": true /* Enables experimental support for ES7 decorators. */,
    "emitDecoratorMetadata": true /* Enables experimental support for emitting type metadata for decorators. */,
    "emitDeclarationOnly": false,
    /* Advanced Options */
    "forceConsistentCasingInFileNames": false /* Disallow inconsistently-cased references to the same file. */,
    "plugins": [
      {
        "transform": "typescript-transform-paths"
      }
    ]
  },
  "include": ["./src/**/*.ts", "./src/**/*.d.ts"],
  "exclude": ["./node_modules", "./test", "./build"]
}
